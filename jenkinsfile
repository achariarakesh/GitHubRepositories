node {
	def workspace = pwd();
	def solutionfolderpath = workspace + "\\TestWebSolution\\TestWebSolution.sln";
	def testProjectfilepath = workspace + "\\TestWebSolution\\NUnitTestProject\\NUnitTestProject.csproj";
	def publishfolderpath = "C:\\Jenkinsdeploy\\WebPipeline";
	def testfilename = "./testresults/" + "${env.BUILD_ID}" + "_TestResult.xml"

	def tok = UUID.randomUUID().toString()
	
	stage('Compile'){
	   echo "Compiling.."
	   bat "\"C:\\nuget\\nuget.exe\" restore ${solutionfolderpath}"
	   bat "\"${tool 'MSBuildLocal'}\" ${solutionfolderpath} /p:DeployOnBuild=false /p:SkipInvalidConfigurations=true /t:build /p:Configuration=Release /p:Platform=\"Any CPU\" /p:DeleteExistingFiles=True"
 	}
	
	stage('Unittest'){
           echo "Unit test.."
	    try{
	        
	        dir('testresults') 
		{
		  deleteDir()
		}
		
	        bat('MKDIR testresults')
		
	        bat "\"C:\\PROGRA~2\\NUnit.org\\nunit-console\\nunit3-console.exe\" ${testProjectfilepath} --config=Release --result=${testfilename};format=nunit2" 
	    }
	    finally{
	    
	       step([$class: 'NUnitPublisher', testResultsPattern: 'testresults/*.xml', debug: false, failIfNoResults: true])
	       
	       bat "\"C:\\Users\\AL2414\\.jenkins\\workspace\\TestPipeline\\TestWebSolution\\packages\\ReportUnit.1.2.1\\tools\\ReportUnit.exe\" ${testfilename}"
	     
	     	publishHTML target: [
		    allowMissing: false,
		    alwaysLinkToLastBuild: false,
		    keepAll: true,
		    reportDir: 'testresults',
		    reportFiles: "${env.BUILD_ID}" + "_TestResult.html",
		    reportName: 'TestReport'
		  ]
		  
		  echo "emailing..."
		  
		  
		 mail (to: 'rakesh.achar@accionlabs.com',
		 	mimeType: 'text/html',
		        subject: "Pre-deployment approval pending '${env.JOB_BASE_NAME}' (${env.BUILD_NUMBER})",
		     	body: """Please click <a href="${env.BUILD_URL}input">here</a> to Approve/Reject Deployment""");
			
			timeout(time:1, unit:'HOURS') {
				input message: 'Click below to Approve/Reject Deployment?', token: tok
			}
			
			//timeout(time:1, unit:'MINUTES') {
			//def userInput = input(id: 'userInput', message: 'Job A Failed do you want to build Job B?', ok: 'Yes')
			//echo userInput
			//}

		// mail to: 'rakesh.achar@accionlabs.com',
                // cc : 'rakesh.achar@accionlabs.com',
                // subject: "BUILD SUCCESSFUL: Build Version",
		// body: "Build Successful ${env.JOB_NAME}\n\nView the test report at:\n ${env.JOB_URL}${env.BUILD_ID}//TestReport"
	    }
	}
	
	stage('Approval Step'){
         
               //----------------send an approval prompt-------------
                  //env.APPROVED_DEPLOY = input message: 'User input required',
                   //parameters: [choice(name: 'Deploy?', choices: 'no\nyes', description: 'Choose "yes" if you want to deploy this build')]
                //-----------------end approval prompt------------
            
        }
	
	stage('Deploy')
	{
	    echo "Deploy.."
	    bat "\"${tool 'MSBuildLocal'}\" ${solutionfolderpath} /p:DeployOnBuild=true /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem /p:SkipInvalidConfigurations=true /t:build /p:Configuration=Release /p:Platform=\"Any CPU\" /p:DeleteExistingFiles=True /p:publishUrl=${publishfolderpath}"
	
	}
	
	stage('Clear')
	{
	   echo "Clearing work space.."
	   echo "cleanWs()"
	}
}

